{"version":3,"file":null,"sources":["/home/adrien/Projects/education/udacity_fsnd/fsnd_p5_neighborhood_map/src/js/models.js","/home/adrien/Projects/education/udacity_fsnd/fsnd_p5_neighborhood_map/src/js/wikipedia.js","/home/adrien/Projects/education/udacity_fsnd/fsnd_p5_neighborhood_map/src/js/google.js","/home/adrien/Projects/education/udacity_fsnd/fsnd_p5_neighborhood_map/src/js/utils.js","/home/adrien/Projects/education/udacity_fsnd/fsnd_p5_neighborhood_map/src/js/index.js","/home/adrien/Projects/education/udacity_fsnd/fsnd_p5_neighborhood_map/node_modules/knockout/build/output/knockout-latest.debug.js","/home/adrien/Projects/education/udacity_fsnd/fsnd_p5_neighborhood_map/src/js/map-theme.js"],"sourcesContent":["import ko from 'knockout';\n\n\n// Manages the list of places and the filtering of that list.\nexport function PlacesVM(places) {\n  this.filter = ko.observable();\n  this.list = ko.observableArray(places);\n  this.filtered = ko.computed(() => {\n    var f = this.filter();\n    if (f) {\n      return ko.utils.arrayFilter(this.list(),\n        ({title: n}) => n.toUpperCase().indexOf(f.toUpperCase()) != -1);\n    }\n    return this.list();\n  });\n  this.selected = ko.observable();\n}\n\n// Manages the UI related props.\nexport function AppVM({places}) {\n  this.menuShown = ko.observable(true);\n  this.menuHidden = ko.computed(() => !this.menuShown());\n  this.toggleMenu = () => this.menuShown(!this.menuShown());\n  this.places = new PlacesVM(places);\n}\n","// REF: https://stackoverflow.com/questions/27457977/searching-wikipedia-using-api\n// REF: https://www.mediawiki.org/wiki/API:Main_page\n// REF: https://www.mediawiki.org/wiki/API:Opensearch\n// REF: https://stackoverflow.com/a/43667416/1401702\n// REF: https://www.mediawiki.org/wiki/Manual:CORS#Description\nexport default function wikiSearch(topic) {\n  var opts = {\n    method: 'GET',\n    mode: 'cors',\n  };\n\n  return fetch(\n    `https://en.wikipedia.org/w/api.php?origin=*&action=opensearch&search=${topic}&limit=1&namespace=0&format=json&redirects=resolve`,\n    opts)\n    .then(resp => {\n      if (resp.ok)\n        return resp.json();\n      else\n        throw resp;\n    })\n    .then(([title,,[summary],[link]]) => ({title, summary, link}));\n}\n","/*global google */\nimport wikiSearch from './wikipedia.js';\n\n\n// A factory function for generating Google Maps Markers\n// with some default settings and additional properties.\n// REF: https://developers.google.com/maps/documentation/\nexport function Marker(props) {\n  var m = new google.maps.Marker(props);\n\n  // Add an infowindow to this marker.\n  m.info = new google.maps.InfoWindow({content: 'Loading...'});\n\n  // Load data from Wikipedia and update the infowindow when it is ready.\n  wikiSearch(props.title)\n    .catch(() => m.info = new google.maps.InfoWindow({content: 'Failed to load info.'}))\n    .then(info => {\n      // REF: https://stackoverflow.com/questions/15114963/changing-data-in-the-info-window-with-google-map-markers\n      m.info.setContent(\n        `<h1>${info.title}</h1>\n        <p>${info.summary == null ? 'No info.' : info.summary}</p>\n        ${info.summary == null ? '' :\n        `<p><a target=\"_blank\" href=\"${info.link}\">See more info on Wikipedia</a></p>`}` // eslint-disable-line indent\n      );\n    });\n\n  // If the place props have an onClick fn, bind it.\n  if (props.onClick)\n    m.addListener('click', props.onClick.bind(null, m, props));\n\n  // If the place props have an onInfoClose fn, bind it.\n  if (props.onInfoClose)\n    m.info.addListener('closeclick', props.onInfoClose.bind(null, m, props));\n\n  // A special method property, called without args, returns the current state.\n  // Called with true or false, sets state.\n  // When active == true a group of associated features are shown,\n  // and hidden when active == false.\n  m.active = function(b) {\n    if (b == null)  // Get.\n      return this._active;\n    else {  // Set.\n      this._active = !!b;\n      // Stuck animation bug in Chrome when setting to null,\n      // and then back to an animation. Using -1, a nonexistant animation\n      // constant, the problem seems to vanish.\n      // REF: https://stackoverflow.com/a/38921305/1401702\n      this.setAnimation(b ? google.maps.Animation.BOUNCE : -1);\n      if (this._active)\n        this.info.open(m.getMap(), m);\n      else\n        this.info.close();\n    }\n  };\n\n  return m;\n}\n\n// key: AIzaSyAIThqsGw6NkA5oIJ1Q3nJmQrtA7B8-Uko\nexport function GMap(el, opts) {\n  var map = new google.maps.Map(el, opts);\n  return map;\n}\n","// An array diffing fn, takes two arrays and returns\n// what was added or removed.\nexport function arrayDiff(orig, mod, key) {\n  mod = new Map(mod.map(b => [key(b), [b, true]]));\n\n  var add = [];\n  var rem = orig.filter(a => {\n    var v = mod.get(key(a));\n    if (v !== undefined)\n      return v[1] = false;  // That's not a mistake, both set and return false.\n    else\n      return true;\n  });\n  mod.forEach((v) => v[1] ? add.push(v[0]) : null);\n\n  return {add, rem};\n}\n","/*global google */\nimport ko from 'knockout';\nimport {AppVM} from './models.js';\nimport mapTheme from './map-theme.js';\nimport {GMap, Marker} from './google.js';\nimport {arrayDiff} from './utils.js';\n\n\n// Call ready when the DOM has loaded.\nwindow.addEventListener('load', ready);\n\nvar places = [\n  {\n    id: 0,\n    title: 'Durban, South Africa',\n    position: {lat: -29.856849, lng: 31.013158},\n  },\n  {\n    id: 1,\n    title: 'Golden Mile, Durban',\n    position: {lat: -29.847707, lng: 31.038169},\n  },\n  {\n    id: 2,\n    title: 'uShaka Marine World',\n    position: {lat: -29.867258, lng: 31.045858},\n    address: '1, King Shaka Ave, Point, Point, Durban, 4001, South Africa',\n  },\n  {\n    id: 3,\n    title: 'Surf Riders Food Shack',\n    position: {lat: -29.8653737, lng: 31.0432985},\n    address: '17 Erskine Terrace, South Beach, Durban, 4001, South Africa',\n  },\n  {\n    id: 4,\n    title: 'Moses Mabhida Stadium',\n    position: {lat: -29.8289524, lng: 31.0281982},\n    address: '44 Isaiah Ntshangase Rd, Stamford Hill, Durban, 4023, South Africa',\n  },\n  {\n    id: 5,\n    title: 'People\\'s Park, Moses Mabhida',\n    position: {lat: -29.8358271, lng: 31.0301228},\n    address: '65 Masabalala Yengwa Ave, Stamford Hill, Durban, 4025, South Africa',\n  },\n  {\n    id: 6,\n    title: 'The Pavilion mall',\n    position: {lat: -29.848028, lng: 30.936382},\n    address: '5 Jack Martens Dr, Dawncliffe, Westville, 3629, South Africa',\n  },\n  {\n    id: 7,\n    title: 'Burman Bush',\n    position: {lat: -29.817700, lng: 31.017622},\n    address: 'Burman Dr, Morningside, Durban, 4001, South Africa',\n  },\n  {\n    id: 8,\n    title: 'The Cenotaph, Durban',\n    position: {lat: -29.858703, lng: 31.025217},\n  },\n  {\n    id: 9,\n    title: 'Berea, Durban',\n    position: {lat: -29.850833, lng: 30.993056},\n  },\n];\n\nplaces.createMarkers = function(Marker, opts={}) {\n  for (var p of this)\n    p.marker = Marker(Object.assign({}, opts, p));\n};\n\n// REF: https://stackoverflow.com/questions/24413766/how-to-use-svg-markers-in-google-maps-api-v3\nvar markerIcon = {\n  path: 'M262.576,0C160.959,0,78.817,82.164,78.817,183.76c0,137.874,183.76,341.393,183.76,341.393s183.76-203.518,183.76-341.393 C446.336,82.164,364.193,0,262.576,0z M262.576,249.404c-36.257,0-65.644-29.387-65.644-65.644 c0-36.17,29.387-65.644,65.644-65.644s65.644,29.474,65.644,65.644C328.22,220.039,298.834,249.404,262.576,249.404z',\n  fillColor: '#ff7ad5',\n  fillOpacity: 1,\n  strokeColor: '#eee',\n  strokeOpacity: 1,\n  anchor: {x: 525.153/2, y: 525.153},\n  strokeWeight: 1,\n  scale: 0.1\n};\n\nvar mapOptions = {\n  zoom: 13,\n  center: {lat: -29.856849, lng: 31.013158},  // Durban\n  styles: mapTheme,\n};\n\nfunction ready() {\n  var map = GMap(document.getElementById('map-area'), mapOptions);\n  var appVM = new AppVM({places});\n  var placesA = appVM.places.filtered();\n  var selected = appVM.places.selected();\n\n  // Bind marker events to PlacesVM.\n  places.createMarkers(Marker, {\n    map,\n    icon: markerIcon,\n    animation: google.maps.Animation.DROP,\n    onClick(m, p) {\n      appVM.places.selected(p.id);\n    },\n    onInfoClose(m, p) {\n      appVM.places.selected(null);\n    },\n  });\n\n  // Refresh the map after the menu moves. Because there is a transition effect\n  // on the menu, we register once for the idle event first. Just give the map\n  // a little shake after opening/closing the menu to refresh.\n  // REF: https://stackoverflow.com/a/31595722/1401702\n  appVM.menuHidden.subscribe(() => {\n    google.maps.event.addListenerOnce(map, 'idle',\n      () => google.maps.event.trigger(map, 'resize'));\n  });\n\n  // Map filtered places in the PlacesVM to Google Maps markers.\n  appVM.places.filtered.subscribe(placesB => {\n    appVM.places.selected(null);  // Deselect any selected places while filtering.\n    var {add, rem} = arrayDiff(placesA, placesB, v => v.id);\n    add.forEach(({marker: m}) => m.setMap(map));\n    rem.forEach(({marker: m}) => m.setMap(null));\n    placesA = placesB;\n  });\n\n  // Map selected place in the PlacesVM to the associated Google Maps marker.\n  appVM.places.selected.subscribe(id => {\n    var placeA = id == null ? null : placesA.find(p => p.id == id);\n    var placeB = selected == null ? null : appVM.places.list().find(p => p.id == selected);\n    !placeA ? null : placeA.marker.active(true);\n    !placeB ? null : placeB.marker.active(false);\n    selected = id;\n  });\n\n  ko.applyBindings(appVM);\n}\n","/*!\n * Knockout JavaScript library v3.4.2\n * (c) The Knockout.js team - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define(['exports', 'require'], factory);\n    } else if (typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.4.2\";\n\nko.exportSymbol('version', ko.version);\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nko.options = {\n    'deferUpdates': false,\n    'useOnlyNativeEvents': false\n};\n\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\nko.utils = (function () {\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(source.hasOwnProperty(prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action) {\n            for (var i = 0, j = array.length; i < j; i++)\n                action(array[i], i);\n        },\n\n        arrayIndexOf: function (array, item) {\n            if (typeof Array.prototype.indexOf == \"function\")\n                return Array.prototype.indexOf.call(array, item);\n            for (var i = 0, j = array.length; i < j; i++)\n                if (array[i] === item)\n                    return i;\n            return -1;\n        },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate.call(predicateOwner, array[i], i))\n                    return array[i];\n            return null;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n                    result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                result.push(mapping(array[i], i));\n            return result;\n        },\n\n        arrayFilter: function (array, predicate) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate(array[i], i))\n                    result.push(array[i]);\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    target[prop] = mapping(source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/knockout/knockout/pull/440\n            //   [B] Any trailing nodes that have been remove should be ignored\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n            //       See https://github.com/knockout/knockout/pull/1903\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n                    continuousNodeArray.length--;\n\n                // Rule [C]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        catchFunctionErrors: function (delegate) {\n            return ko['onError'] ? function () {\n                try {\n                    return delegate.apply(this, arguments);\n                } catch (e) {\n                    ko['onError'] && ko['onError'](e);\n                    throw e;\n                }\n            } : delegate;\n        },\n\n        setTimeout: function (handler, timeout) {\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n        },\n\n        deferError: function (error) {\n            setTimeout(function () {\n                ko['onError'] && ko['onError'](error);\n                throw error;\n            }, 0);\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, wrappedHandler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        createSymbolOrString: function(identifier) {\n            return canUseSymbols ? Symbol(identifier) : identifier;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    function getAll(node, createIfNotFound) {\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n        if (!hasExistingDataStore) {\n            if (!createIfNotFound)\n                return undefined;\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n            dataStore[dataStoreKey] = {};\n        }\n        return dataStore[dataStoreKey];\n    }\n\n    return {\n        get: function (node, key) {\n            var allDataForNode = getAll(node, false);\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\n        },\n        set: function (node, key, value) {\n            if (value === undefined) {\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\n                if (getAll(node, false) === undefined)\n                    return;\n            }\n            var allDataForNode = getAll(node, true);\n            allDataForNode[key] = value;\n        },\n        clear: function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        },\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var none = [0, \"\", \"\"],\n        table = [1, \"<table>\", \"</table>\"],\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n        lookup = {\n            'thead': table,\n            'tbody': table,\n            'tfoot': table,\n            'tr': tbody,\n            'td': tr,\n            'th': tr,\n            'option': select,\n            'optgroup': select\n        },\n\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\n    function getWrap(tags) {\n        var m = tags.match(/^<([a-z]+)[ >]/);\n        return (m && lookup[m[1]]) || none;\n    }\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n            wrap = getWrap(tags),\n            depth = wrap[0];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n            // somehow shims the native APIs so it just works anyway)\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            if (mayRequireCreateElementHack) {\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n                // only works if we assign innerHTML on an element associated with that document.\n                documentContext.appendChild(div);\n            }\n\n            div.innerHTML = markup;\n\n            if (mayRequireCreateElementHack) {\n                div.parentNode.removeChild(div);\n            }\n        }\n\n        // Move to the right depth\n        while (depth--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ?\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        // rateLimit supersedes deferred updates\n        target._deferUpdates = false;\n\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout);\n        });\n    },\n\n    'deferred': function(target, options) {\n        if (options !== true) {\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n        }\n\n        if (!target._deferUpdates) {\n            target._deferUpdates = true;\n            target.limit(function (callback) {\n                var handle,\n                    ignoreUpdates = false;\n                return function () {\n                    if (!ignoreUpdates) {\n                        ko.tasks.cancel(handle);\n                        handle = ko.tasks.schedule(callback);\n\n                        try {\n                            ignoreUpdates = true;\n                            target['notifySubscribers'](undefined, 'dirty');\n                        } finally {\n                            ignoreUpdates = false;\n                        }\n                    }\n                };\n            });\n        }\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = ko.utils.setTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = { \"change\": [] };\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            var subs = event === defaultEvent && this._changeSubscriptions || this._subscriptions[event].slice(0);\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var i = 0, subscription; subscription = subs[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, notifyNextChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self._evalIfChanged ? self._evalIfChanged() : self();\n            }\n            var shouldNotify = notifyNextChange || self.isDifferent(previousValue, pendingValue);\n\n            notifyNextChange = ignoreBeforeChange = false;\n\n            if (shouldNotify) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value) {\n            self._changeSubscriptions = self._subscriptions[defaultEvent].slice(0);\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n        self._notifyNextChangeIfValueIsDifferent = function() {\n            if (self.isDifferent(previousValue, self.peek(true /*evaluate*/))) {\n                notifyNextChange = true;\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\nko.observable = function (initialValue) {\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n                observable.valueWillMutate();\n                observable[observableLatestValue] = arguments[0];\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return observable[observableLatestValue];\n        }\n    }\n\n    observable[observableLatestValue] = initialValue;\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(observable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(observable);\n\n    // Inherit from 'observable'\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](observable, true);\n    }\n\n    return observable;\n}\n\n// Define prototype for observables\nvar observableFn = {\n    'equalityComparer': valuesArePrimitiveAndEqual,\n    peek: function() { return this[observableLatestValue]; },\n    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n}\n\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\nobservableFn[protoProperty] = ko.observable;\n\nko.hasPrototype = function(instance, prototype) {\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n};\n\nko.isObservable = function (instance) {\n    return ko.hasPrototype(instance, ko.observable);\n}\nko.isWriteableObservable = function (instance) {\n    // Observable\n    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n        return true;\n    // Writeable dependent observable\n    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n        return true;\n    // Anything else\n    return false;\n}\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.exportSymbol('observable.fn', observableFn);\nko.exportProperty(observableFn, 'peek', observableFn.peek);\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.exportSymbol('observableArray', ko.observableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target, options) {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options == \"object\") {\n        ko.utils.extend(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions['sparse'] = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        arrayChangeSubscription,\n        pendingNotifications = 0,\n        underlyingNotifySubscribersFunction,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction)\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction)\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            if (underlyingNotifySubscribersFunction) {\n                target['notifySubscribers'] = underlyingNotifySubscribersFunction;\n                underlyingNotifySubscribersFunction = undefined;\n            }\n            arrayChangeSubscription.dispose();\n            trackingChanges = false;\n        }\n    };\n\n    function trackChanges() {\n        // Calling 'trackChanges' multiple times is the same as calling it once\n        if (trackingChanges) {\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Intercept \"notifySubscribers\" to track how many times it was called.\n        underlyingNotifySubscribersFunction = target['notifySubscribers'];\n        target['notifySubscribers'] = function(valueToNotify, event) {\n            if (!event || event === defaultEvent) {\n                ++pendingNotifications;\n            }\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\n        };\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        var previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\n            // Make a copy of the current contents and ensure it's an array\n            currentContents = [].concat(currentContents || []);\n\n            // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                var changes = getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingNotifications = 0;\n\n            if (changes && changes.length) {\n                target['notifySubscribers'](changes, arrayChangeEventName);\n            }\n        });\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingNotifications > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingNotifications) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nvar computedState = ko.utils.createSymbolOrString('_state');\n\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options[\"read\"] = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options[\"read\"] != \"function\")\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\n    var writeFunction = options[\"write\"];\n    var state = {\n        latestValue: undefined,\n        isStale: true,\n        isDirty: true,\n        isBeingEvaluated: false,\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n        isDisposed: false,\n        pure: false,\n        isSleeping: false,\n        readFunction: options[\"read\"],\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n        domNodeDisposalCallback: null,\n        dependencyTracking: {},\n        dependenciesCount: 0,\n        evaluationTimeoutInstance: null\n    };\n\n    function computedObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            ko.dependencyDetection.registerDependency(computedObservable);\n            if (state.isDirty || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n                computedObservable.evaluateImmediate();\n            }\n            return state.latestValue;\n        }\n    }\n\n    computedObservable[computedState] = state;\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(computedObservable);\n\n    // Inherit from 'computed'\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\n    if (options['pure']) {\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        ko.utils.extend(computedObservable, pureComputedOverrides);\n    } else if (options['deferEvaluation']) {\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n    }\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        computedObservable[\"_options\"] = options;\n    }\n\n    if (state.disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options['deferEvaluation']) {\n        computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n            computedObservable.dispose();\n        });\n    }\n\n    return computedObservable;\n};\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n    if (entryToDispose !== null && entryToDispose.dispose) {\n        entryToDispose.dispose();\n    }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    var computedObservable = this.computedObservable,\n        state = computedObservable[computedState];\n    if (!state.isDisposed) {\n        if (this.disposalCount && this.disposalCandidates[id]) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n        }\n        // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\n        if (subscribable._notificationIsPending) {\n            subscribable._notifyNextChangeIfValueIsDifferent();\n        }\n    }\n}\n\nvar computedFn = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\n    getDependenciesCount: function () {\n        return this[computedState].dependenciesCount;\n    },\n    addDependencyTracking: function (id, target, trackingObj) {\n        if (this[computedState].pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        this[computedState].dependencyTracking[id] = trackingObj;\n        trackingObj._order = this[computedState].dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged: function () {\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n        for (id in dependencyTracking) {\n            if (dependencyTracking.hasOwnProperty(id)) {\n                dependency = dependencyTracking[id];\n                if ((this._evalDelayed && dependency._target._notificationIsPending) || dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    },\n    markDirty: function () {\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n            this._evalDelayed(false /*isChange*/);\n        }\n    },\n    isActive: function () {\n        var state = this[computedState];\n        return state.isDirty || state.dependenciesCount > 0;\n    },\n    respondToChange: function () {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n        } else if (this[computedState].isDirty) {\n            this[computedState].isStale = true;\n        }\n    },\n    subscribeToDependency: function (target) {\n        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: function () {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        } else {\n            return target.subscribe(this.evaluatePossiblyAsync, this);\n        }\n    },\n    evaluatePossiblyAsync: function () {\n        var computedObservable = this,\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed(true /*isChange*/);\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate: function (notifyChange) {\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            disposeWhen = state.disposeWhen,\n            changed = false;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            changed = false;\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable: computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        ko.dependencyDetection.begin({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial: isInitial\n        });\n\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n            if (!state.isSleeping) {\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n            }\n\n            state.latestValue = newValue;\n            if (DEBUG) computedObservable._latestValue = newValue;\n\n            if (state.isSleeping) {\n                computedObservable.updateVersion();\n            } else if (notifyChange) {\n                computedObservable[\"notifySubscribers\"](state.latestValue);\n            }\n\n            changed = true;\n        }\n\n        if (isInitial) {\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            var readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            ko.dependencyDetection.end();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n            }\n\n            state.isStale = state.isDirty = false;\n        }\n    },\n    peek: function (evaluate) {\n        // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        // Pass in true to evaluate if needed.\n        var state = this[computedState];\n        if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit: function (limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        ko.subscribable['fn'].limit.call(this, limitFunction);\n        this._evalIfChanged = function () {\n            if (this[computedState].isStale) {\n                this.evaluateImmediate();\n            } else {\n                this[computedState].isDirty = false;\n            }\n            return this[computedState].latestValue;\n        };\n        this._evalDelayed = function (isChange) {\n            this._limitBeforeChange(this[computedState].latestValue);\n\n            // Mark as dirty\n            this[computedState].isDirty = true;\n            if (isChange) {\n                this[computedState].isStale = true;\n            }\n\n            // Pass the observable to the \"limit\" code, which will evaluate it when\n            // it's time to do the notification.\n            this._limitChange(this);\n        };\n    },\n    dispose: function () {\n        var state = this[computedState];\n        if (!state.isSleeping && state.dependencyTracking) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isDirty = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = null;\n    }\n};\n\nvar pureComputedOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        var computedObservable = this,\n            state = computedObservable[computedState];\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                if (computedObservable.evaluateImmediate()) {\n                    computedObservable.updateVersion();\n                }\n            } else {\n                // First put the dependencies in order\n                var dependeciesOrder = [];\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                    dependeciesOrder[dependency._order] = id;\n                });\n                // Next, subscribe to each one\n                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n                    var dependency = state.dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    state.dependencyTracking[id] = subscription;\n                });\n            }\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove: function (event) {\n        var state = this[computedState];\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose) {\n                    state.dependencyTracking[id] = {\n                        _target: dependency._target,\n                        _order: dependency._order,\n                        _version: dependency._version\n                    };\n                    dependency.dispose();\n                }\n            });\n            state.isSleeping = true;\n            this[\"notifySubscribers\"](undefined, \"asleep\");\n        }\n    },\n    getVersion: function () {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        var state = this[computedState];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return ko.subscribable['fn'].getVersion.call(this);\n    }\n};\n\nvar deferEvaluationOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event == 'change' || event == 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\nko.computed[protoProp] = ko.observable;\ncomputedFn[protoProp] = ko.computed;\n\nko.isComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed);\n};\n\nko.isPureComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed)\n        && instance[computedState] && instance[computedState].pure;\n};\n\nko.exportSymbol('computed', ko.computed);\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\nko.exportSymbol('isComputed', ko.isComputed);\nko.exportSymbol('isPureComputed', ko.isPureComputed);\nko.exportSymbol('computed.fn', computedFn);\nko.exportProperty(computedFn, 'peek', computedFn.peek);\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n        // These two match strings, either with double quotes or single quotes\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n        // as a regular expression (this is handled by the parsing loop below).\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n        // These characters have special meaning to the parser and must not appear in the middle of a\n        // token, except as part of a string.\n        specials = ',\"\\'{}()/:[\\\\]',\n        // Match text (at least two characters) that does not contain any of the above special characters,\n        // although some of the special characters are allowed to start it (all but the colon and comma).\n        // The text can contain spaces, but leading or trailing spaces are skipped.\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n        // Match any non-space character not matched already. This will match colons and commas, since they're\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n        oneNotSpace = '[^\\\\s]',\n\n        // Create the actual regular expression by or-ing the above strings. The order is important.\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks) {\n            // Append a comma so that we don't need a separate code block to deal with the last item\n            toks.push(',');\n\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        toks.push(',');\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            if (!isStartComment(containerNode)) {\n                if (containerNode.firstChild)\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n                else\n                    containerNode.appendChild(nodeToPrepend);\n            } else {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else if (!isStartComment(containerNode)) {\n                // Insert after insertion point\n                if (insertAfterNode.nextSibling)\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n                else\n                    containerNode.appendChild(nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node))\n                return node.firstChild;\n            if (!node.nextSibling || isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node))\n                node = getMatchingEndComment(node);\n            if (node.nextSibling && isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue.\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n        // and because such elements' contents are always intended to be bound in a different context\n        // from where they appear in the document.\n        'script': true,\n        'textarea': true,\n        'template': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n                // parent context is updated, this context will also be updated.\n                if (parentContext._subscribable)\n                    parentContext._subscribable();\n\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Because the above copy overwrites our own properties, we need to reset them.\n                self._subscribable = subscribable;\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n            self['$rawData'] = dataItemOrObservable;\n            self['$data'] = dataItem;\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            return self['$data'];\n        }\n        function disposeWhen() {\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n        }\n\n        var self = this,\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n            nodes,\n            subscribable;\n\n        if (options && options['exportDependencies']) {\n            // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\n            // the binding context when they change.\n            updateContext();\n        } else {\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\n            // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n            // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n            // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n            // the context object.\n            if (subscribable.isActive()) {\n                self._subscribable = subscribable;\n\n                // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n                subscribable['equalityComparer'] = null;\n\n                // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n                // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n                // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n                // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\n                // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n                nodes = [];\n                subscribable._addNode = function(node) {\n                    nodes.push(node);\n                    ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n                        ko.utils.arrayRemoveItem(nodes, node);\n                        if (!nodes.length) {\n                            subscribable.dispose();\n                            self._subscribable = subscribable = undefined;\n                        }\n                    });\n                };\n            }\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any observables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback, options) {\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        }, options);\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties) {\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n            // This \"child\" context doesn't directly track a parent observable view model,\n            // so we need to manually set the $rawData value to match the parent.\n            self['$rawData'] = parentContext['$rawData'];\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n        });\n    };\n\n    ko.bindingContext.prototype.createStaticChildContext = function (dataItemOrAccessor, dataItemAlias) {\n        return this['createChildContext'](dataItemOrAccessor, dataItemAlias, null, { \"exportDependencies\": true });\n    };\n\n    // Returns the valueAccesor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n        var currentChild,\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n            provider = ko.bindingProvider['instance'],\n            preprocessNode = provider['preprocessNode'];\n\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n        // trigger insertion of <template> contents at that point in the document.\n        if (preprocessNode) {\n            while (currentChild = nextInQueue) {\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                preprocessNode.call(provider, currentChild);\n            }\n            // Reset nextInQueue for the next loop\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n        }\n\n        while (currentChild = nextInQueue) {\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n        }\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n        var shouldBindDescendants = true;\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n        if (shouldApplyBindings)\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n            //    hence bindingContextsMayDifferFromDomParentElement is false\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n            //    hence bindingContextsMayDifferFromDomParentElement is true\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n        }\n    }\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\n        }\n\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n            ko.storedBindingContextForNode(node, bindingContext);\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support observable view models.\n                    if (bindings && bindingContext._subscribable)\n                        bindingContext._subscribable();\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        return {\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n        };\n    };\n\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n    ko.storedBindingContextForNode = function (node, bindingContext) {\n        if (arguments.length == 2) {\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n            if (bindingContext._subscribable)\n                bindingContext._subscribable._addNode(node);\n        } else {\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n        }\n    }\n\n    function getBindingContext(viewModelOrBindingContext) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        switch (node.nodeType) {\n            case 1:\n            case 8:\n                var context = ko.storedBindingContextForNode(node);\n                if (context) return context;\n                if (node.parentNode) return ko.contextFor(node.parentNode);\n                break;\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n                // async).\n                //\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    ko.tasks.schedule(function() {\n                        subscribable['notifySubscribers'](definition);\n                    });\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return defaultConfigRegistry.hasOwnProperty(componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        if (ko.components.isRegistered(tagNameLower)) {\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n                return tagNameLower;\n            }\n        }\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!result.hasOwnProperty('$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (allComponents.hasOwnProperty(componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove)\n                element.removeAttribute(attrName);\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n                attrName = attrHtmlToJavascriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                element.setAttribute(attrName, attrValue.toString());\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (allBindings['has']('value')) {\n                return ko.utils.unwrapObservable(allBindings.get('value'));\n            }\n\n            return element.value;\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be getting checked, and that one can take care of updating state.\n            if (isRadio && !isChecked) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (valueIsArray) {\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n                if (oldElemValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n                    }\n\n                    oldElemValue = elemValue;\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n            } else if (isCheckbox) {\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n                element.checked = modelValue;\n            } else {\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            oldElemValue = valueIsArray ? checkedValue() : undefined,\n            useCheckedValue = isRadio || valueIsArray;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\n        rawValue = undefined;\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n            element[classesWrittenByBindingKey] = value;\n            ko.utils.toggleDomNodeCssClass(element, value, true);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[hasfocusLastValue]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate,\n                savedNodes;\n            ko.computed(function() {\n                var rawValue = valueAccessor(),\n                    dataValue = ko.utils.unwrapObservable(rawValue),\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n                    isFirstRender = !savedNodes,\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\n                if (needsRefresh) {\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                    }\n\n                    if (shouldDisplay) {\n                        if (!isFirstRender) {\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                        }\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, rawValue) : bindingContext, element);\n                    } else {\n                        ko.virtualElements.emptyNode(element);\n                    }\n\n                    didDisplayOnLastUpdate = shouldDisplay;\n                }\n            }, null, { disposeWhenNodeIsRemoved: element });\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n    function(bindingContext, dataValue) {\n        return bindingContext.createStaticChildContext(dataValue);\n    }\n);\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        ko.dependencyDetection.ignore(function () {\n            if (valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else {\n                // Determine if the selection has changed as a result of updating the options list\n                var selectionChanged;\n                if (multiple) {\n                    // For a multiple-select box, compare the new selection count to the previous one\n                    // But if nothing was selected before, the selection can't have changed\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                } else {\n                    // For a single-select box, compare the current value to the previous value\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n                }\n\n                // Ensure consistency between model value and selected option.\n                // If the dropdown was changed so that selection is no longer the same,\n                // notify the value or selectedOptions binding.\n                if (selectionChanged) {\n                    ko.utils.triggerEvent(element, \"change\");\n                }\n            }\n        });\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        ko.utils.registerEventHandler(element, \"change\", function () {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        });\n    },\n    'update': function (element, valueAccessor) {\n        if (ko.utils.tagNameLower(element) != \"select\")\n            throw new Error(\"values binding applies only to SELECT elements\");\n\n        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n            previousScrollTop = element.scrollTop;\n\n        if (newValue && typeof newValue.length == \"number\") {\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n                }\n            });\n        }\n\n        element.scrollTop = previousScrollTop;\n    }\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            element.style[styleName] = styleValue;\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n        userAgent = window.navigator.userAgent,\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ko.utils.ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\n            }\n        };\n\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n        // so we'll make sure all updates are asynchronous\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ko.utils.ieVersion < 10) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n                // when using autocomplete, we'll use 'propertychange' for it also.\n                onEvent('propertychange', function(event) {\n                    if (event.propertyName === 'value') {\n                        ieUpdateModel(event);\n                    }\n                });\n\n                if (ko.utils.ieVersion == 8) {\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                    // events too.\n                    onEvent('keyup', updateModel);      // A single keystoke\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\n                }\n                if (ko.utils.ieVersion >= 8) {\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                    // These are also needed in IE8 because of the bug described above.\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                    onEvent('dragend', deferUpdateModel);\n                }\n            } else {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', updateModel);\n\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                    onEvent('keydown', deferUpdateModel);\n                    onEvent('paste', deferUpdateModel);\n                    onEvent('cut', deferUpdateModel);\n                } else if (operaVersion < 11) {\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                    // We can try to catch some of those using 'keydown'.\n                    onEvent('keydown', deferUpdateModel);\n                } else if (firefoxVersion < 4.0) {\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                    onEvent('DOMAutoComplete', updateModel);\n\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                    onEvent('dragdrop', updateModel);       // <3.5\n                    onEvent('drop', updateModel);           // 3.5\n                }\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['value'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        // Always catch \"change\" event; possibly other events too if asked\n        var eventsToCatch = [\"change\"];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n                requestedEventsToCatch = [requestedEventsToCatch];\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel = function () {\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\n            var elementValue = ko.selectExtensions.readValue(element);\n\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateFromModel, 0);\n                return;\n            }\n\n            var valueHasChanged = (newValue !== elementValue);\n\n            if (valueHasChanged) {\n                if (ko.utils.tagNameLower(element) === \"select\") {\n                    var allowUnset = allBindings.get('valueAllowUnset');\n                    var applyValueAction = function () {\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                    };\n                    applyValueAction();\n\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                    } else {\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                        // to apply the value as well.\n                        ko.utils.setTimeout(applyValueAction, 0);\n                    }\n                } else {\n                    ko.selectExtensions.writeValue(element, newValue);\n                }\n            }\n        };\n\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text() \t\t\t- returns the template text from your storage location\n    //   text(value)\t\t- writes the supplied template text to your storage location\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    // template types\n    var templateScript = 1,\n        templateTextArea = 2,\n        templateTemplate = 3,\n        templateElement = 4;\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n\n        if (element) {\n            var tagNameLower = ko.utils.tagNameLower(element);\n            this.templateType =\n                tagNameLower === \"script\" ? templateScript :\n                tagNameLower === \"textarea\" ? templateTextArea :\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n                templateElement;\n        }\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n                                 : this.templateType === templateTextArea ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    var templatesDomDataKey = ko.utils.domData.nextKey();\n    function getTemplateDomData(element) {\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n    }\n    function setTemplateDomData(element, data) {\n        ko.utils.domData.set(element, templatesDomDataKey, data);\n    }\n\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        var element = this.domElement;\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(element),\n                containerData = templateData.containerData;\n            return containerData || (\n                this.templateType === templateTemplate ? element.content :\n                this.templateType === templateElement ? element :\n                undefined);\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(element, {containerData: valueToWrite});\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender'])\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(dataOrBindingContext, null, null, null, { \"exportDependencies\": true });\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext;\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n                context['$index'] = index;\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        }\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        return ko.dependentObservable(function () {\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n    }\n\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element),\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                templateName;\n\n            if (typeof options == \"string\") {\n                templateName = value;\n                options = {};\n            } else {\n                templateName = options['name'];\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = ('data' in options) ?\n                    bindingContext.createStaticChildContext(options['data'], options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length < newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n        deletedItemDummyValue = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n        // Compare the provided array against the previous one\n        array = array || [];\n        options = options || {};\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var newMappingResultIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToProcess = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (newMappingResultIndex !== oldPosition)\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(newMappingResultIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n            itemsToProcess.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    if (items[i]) {\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                            callback(node, i, items[i].arrayEntry);\n                        });\n                    }\n                }\n            }\n        }\n\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable) {\n                            mapData.dependentObservable.dispose();\n                            mapData.dependentObservable = undefined;\n                        }\n\n                        // Queue these nodes for later removal\n                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                            if (options['beforeRemove']) {\n                                newMappingResult.push(mapData);\n                                itemsToProcess.push(mapData);\n                                if (mapData.arrayEntry === deletedItemDummyValue) {\n                                    mapData = null;\n                                } else {\n                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n                                }\n                            }\n                            if (mapData) {\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                            }\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"retained\":\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\n                    break;\n\n                case \"added\":\n                    if (movedIndex !== undefined) {\n                        itemMovedOrRetained(i, movedIndex);\n                    } else {\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n                        newMappingResult.push(mapData);\n                        itemsToProcess.push(mapData);\n                        if (!isFirstExecution)\n                            itemsForAfterAddCallbacks[i] = mapData;\n                    }\n                    break;\n            }\n        }\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n                if (node !== nextNode)\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n            }\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n            if (itemsForBeforeRemoveCallbacks[i]) {\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n            }\n        }\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n","export default [\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#e9e9e9\"\n      },\n      {\n        \"lightness\": 17\n      }\n    ]\n  },\n  {\n    \"featureType\": \"landscape\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#f5f5f5\"\n      },\n      {\n        \"lightness\": 20\n      }\n    ]\n  },\n  // {\n  //   \"featureType\": \"landscape.man_made\",\n  //   \"elementType\": \"geometry.fill\",\n  //   \"stylers\": [\n  //     {\n  //       \"color\": \"#eee\"\n  //     }\n  //   ]\n  // },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 17\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 29\n      },\n      {\n        \"weight\": 0.2\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.arterial\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 18\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.local\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 16\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#f5f5f5\"\n      },\n      {\n        \"lightness\": 21\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#dedede\"\n      },\n      {\n        \"lightness\": 21\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"visibility\": \"on\"\n      },\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 16\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"saturation\": 36\n      },\n      {\n        \"color\": \"#333333\"\n      },\n      {\n        \"lightness\": 40\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.icon\",\n    \"stylers\": [\n      {\n        \"visibility\": \"off\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#f2f2f2\"\n      },\n      {\n        \"lightness\": 19\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#fefefe\"\n      },\n      {\n        \"lightness\": 20\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#fefefe\"\n      },\n      {\n        \"lightness\": 17\n      },\n      {\n        \"weight\": 1.2\n      }\n    ]\n  }\n];\n"],"names":["PlacesVM","places","filter","ko","observable","list","observableArray","filtered","computed","f","_this","utils","arrayFilter","title","toUpperCase","indexOf","selected","AppVM","menuShown","menuHidden","_this2","toggleMenu","wikiSearch","topic","opts","fetch","then","resp","ok","json","summary","link","Marker","props","m","google","maps","info","InfoWindow","content","catch","setContent","onClick","addListener","bind","onInfoClose","active","b","this","_active","setAnimation","Animation","BOUNCE","open","getMap","close","GMap","el","Map","arrayDiff","orig","mod","key","map","add","rem","v","get","a","undefined","forEach","push","ready","document","getElementById","mapOptions","appVM","placesA","createMarkers","markerIcon","DROP","p","id","subscribe","event","addListenerOnce","trigger","placesB","marker","setMap","placeA","find","placeB","applyBindings","window","eval","navigator","jQueryInstance","JSON","factory","define","module","exports","koExports","amdRequire","valuesArePrimitiveAndEqual","primitiveTypes","throttle","callback","timeout","timeoutInstance","setTimeout","debounce","clearTimeout","applyExtenders","requestedExtenders","target","objectForEach","value","extenderHandler","extenders","limitNotifySubscribers","defaultEvent","_limitBeforeChange","_origNotifySubscribers","_limitChange","computedDisposeDependencyCallback","entryToDispose","dispose","computedBeginDependencyDetectionCallback","subscribable","computedObservable","state","computedState","isDisposed","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","_target","subscribeToDependency","_notificationIsPending","_notifyNextChangeIfValueIsDifferent","makeWithIfBinding","bindingKey","isWith","isNot","makeContextCallback","bindingHandlers","init","element","valueAccessor","allBindings","viewModel","bindingContext","didDisplayOnLastUpdate","savedNodes","rawValue","dataValue","unwrapObservable","shouldDisplay","isFirstRender","computedContext","getDependenciesCount","cloneNodes","virtualElements","childNodes","setDomNodeChildren","applyBindingsToDescendants","emptyNode","disposeWhenNodeIsRemoved","controlsDescendantBindings","expressionRewriting","bindingRewriteValidators","allowedBindings","exportSymbol","koPath","object","tokens","split","i","length","exportProperty","owner","publicName","version","options","deferUpdates","useOnlyNativeEvents","obj","action","prop","hasOwnProperty","extend","source","setPrototypeOf","proto","__proto__","isClickOnCheckableElement","eventType","tagNameLower","type","toLowerCase","inputType","toggleDomNodeCssClass","node","classNames","shouldHaveClass","addOrRemoveFn","classList","arrayForEach","match","cssClassNameRegex","className","call","toggleObjectClassPropertyString","currentClassNames","addOrRemoveItem","join","canSetPrototype","Array","knownEvents","knownEventTypesByEventName","test","userAgent","knownEventsForType","j","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","div","createElement","iElems","getElementsByTagName","innerHTML","isIe6","isIe7","fieldsIncludedWithJsonPost","array","arrayIndexOf","item","prototype","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","splice","shift","arrayGetDistinctValues","result","arrayMap","mapping","arrayPushAll","valuesToPush","apply","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","container","ownerDocument","appendChild","cleanNode","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parent","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagName","catchFunctionErrors","delegate","arguments","e","handler","deferError","error","registerEventHandler","wrappedHandler","mustUseAttachEvent","addEventListener","attachEvent","Error","attachEventHandler","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","triggerEvent","useClickWorkaround","createEvent","dispatchEvent","eventCategory","initEvent","click","fireEvent","isObservable","peek","setTextContent","textContent","innerTextNode","createTextNode","data","forceRefresh","setElementName","name","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","getFormFields","form","fieldName","fields","concat","isMatchingField","field","matches","parseJson","jsonString","parse","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","display","method","input","body","submit","removeChild","originalFunction","partialArgs","slice","args","domData","getAll","createIfNotFound","dataStoreKey","dataStoreKeyExpandoPropertyName","dataStore","uniqueId","Date","getTime","allDataForNode","set","clear","nextKey","getDisposeCallbacksCollection","allDisposeCallbacks","domDataKey","destroyCallbacksCollection","cleanSingleNode","callbacks","cleanableNodeTypesWithDescendants","cleanImmediateCommentTypeChildren","nodeWithChildren","child","nextChild","cleanableNodeTypes","1","8","9","removeDisposeCallback","callbacksCollection","descendants","cleanExternalData","getWrap","tags","lookup","none","simpleHtmlParse","html","documentContext","windowContext","wrap","depth","markup","mayRequireCreateElementHack","lastChild","jQueryHtmlParse","elems","table","tr","select","thead","tbody","tfoot","td","th","option","optgroup","parseHtmlFragment","setHtml","parsedNodes","memoization","randomMax8HexChars","Math","random","generateRandomId","findMemoNodes","rootNode","appendToArray","memoId","parseMemoText","nodeValue","memos","memoize","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","combinedParams","memoText","tasks","processTasks","taskQueueLength","task","mark","countMarks","nextIndexToProcess","taskQueue","ex","scheduledProcess","scheduleTaskProcessing","nextHandle","scheduler","MutationObserver","observe","attributes","toggle","script","onreadystatechange","schedule","func","cancel","handle","resetForTesting","runEarly","writeTimeoutInstance","dependentObservable","read","write","rateLimit","limitFunction","_deferUpdates","limit","deferred","ignoreUpdates","notify","notifyWhen","boolean","number","subscription","disposeCallback","ko_subscribable_fn","instance","_subscriptions","change","_versionNumber","callbackTarget","self","boundCallback","afterSubscriptionRemove","beforeSubscriptionAdd","notifySubscribers","valueToNotify","updateVersion","hasSubscriptionsForEvent","subs","_changeSubscriptions","dependencyDetection","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","notifyNextChange","previousValue","pendingValue","selfIsObservable","finish","_evalIfChanged","shouldNotify","isDifferent","getSubscriptionsCount","total","eventName","subscriptions","oldValue","newValue","isSubscribable","getId","lastId","outerFrames","currentFrame","pop","registerDependency","_id","ignore","callbackArgs","isInitial","ignoreDependencies","observableLatestValue","initialValue","valueWillMutate","valueHasMutated","observableFn","equalityComparer","protoProperty","hasPrototype","isWriteableObservable","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","destroyAll","oldItem","newItem","methodName","cacheDiffForKnownOperation","methodCallResult","arrayChangeEventName","trackChanges","trackingChanges","underlyingNotifySubscribersFunction","pendingNotifications","previousContents","cachedDiff","arrayChangeSubscription","currentContents","changes","getChanges","compareArrays","compareArrayOptions","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","rawArray","operationName","pushDiff","status","diff","arrayLength","argsLength","offset","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","isDirty","haveDependenciesChanged","evaluateImmediate","latestValue","isStale","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","hasWriteFunction","computedFn","pureComputedOverrides","deferEvaluationOverrides","isActive","trackingObj","_order","_version","dependency","_evalDelayed","markDirty","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","changed","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","_latestValue","evaluate","isChange","dependeciesOrder","order","protoProp","isComputed","isPureComputed","pureComputed","mapJsObjectGraph","rootObject","mapInputCallback","visitedObjects","objectLookup","RegExp","String","Number","Boolean","outputProperties","save","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","visitorCallback","propertyName","keys","values","toJS","valueToMap","toJSON","plainJavaScriptObject","constructor","existingIndex","selectExtensions","readValue","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","n","size","getWriteableValue","expression","javaScriptReservedWords","javaScriptAssignmentTarget","parseObjectLiteral","objectLiteralString","str","charCodeAt","toks","bindingToken","tok","c","unknown","divisionLookBehind","keywordRegexLookBehind","substr","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","writableVal","bindingParams","twoWayBindings","propertyAccessorResultStrings","makeValueAccessors","resultStrings","keyValueArray","keyValue","stringDouble","in","return","typeof","keyValueArrayContainsKey","writeValueToProperty","property","checkIfDifferent","propWriters","isStartComment","startCommentRegex","commentNodesHaveTextProperty","isEndComment","endCommentRegex","getVirtualChildren","startComment","allowUnbalanced","currentNode","children","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","createComment","htmlTagsWithOptionallyClosingChildren","ul","ol","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertAfter","nodeToInsert","insertAfterNode","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","createBindingsStringEvaluatorViaCache","bindingsString","cache","cacheKey","createBindingsStringEvaluator","functionBody","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getBindings","parsedBindings","addBindingsForCustomElement","getBindingAccessors","valueAccessors","getBindingsString","parseBindingsString","message","makeValueAccessor","evaluateValueAccessor","makeAccessorsFromFunction","makeBindingAccessors","bindings","context","getBindingsAndMakeAccessors","validateThatBindingIsAllowedForVirtualElements","bindingName","applyBindingsToDescendantsInternal","elementOrVirtualElement","bindingContextsMayDifferFromDomParentElement","currentChild","nextInQueue","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","nodeVerified","bindingContextMayDifferFromDomParentElement","shouldBindDescendants","isElement","applyBindingsToNodeInternal","bindingDoesNotRecurseIntoElementTypes","topologicalSortBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","bindingDependencyKey","sourceBindings","bindingsUpdater","alreadyBound","boundElementDomDataKey","storedBindingContextForNode","_subscribable","bindingHandlerThatControlsDescendantBindings","getValueAccessor","orderedBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","initResult","getBindingContext","viewModelOrBindingContext","textarea","template","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","dataItem","_addNode","unshift","properties","createStaticChildContext","exportDependencies","storedBindingContextDomDataKey","applyBindingAccessorsToNode","applyBindingsToNode","contextFor","dataFor","getObjectOwnProperty","propName","loadComponentAndNotify","componentName","completedAsync","loadingSubscribablesCache","beginLoadingComponent","definition","config","isSynchronousComponent","loadedDefinitionsCache","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","currentCandidateLoader","methodInstance","wasAborted","cachedDefinition","clearCachedDefinition","_getFirstResultFromLoaders","resolveConfig","errorCallback","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","possiblyGetConfigFromAmd","loadedConfig","resolvedTemplate","resolvedViewModel","createViewModelKey","resolveTemplate","isDocumentFragment","isDomElement","cloneNodesFromTemplateSourceElement","elemInstance","resolveViewModel","fixedInstance","componentInfo","HTMLElement","DocumentFragment","makeErrorCallback","defaultConfigRegistry","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","loadTemplate","loadViewModel","_allRegisteredComponents","getComponentParamsFromCustomElement","paramsAttribute","nativeBindingProviderInstance","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","componentBindingValue","createDocumentFragment","newDocFrag","allComponents","cloneTemplateIntoElement","componentDefinition","clonedNodesArray","createViewModel","originalChildNodes","componentParams","componentViewModelFactory","templateNodes","componentLoadingOperationUniqueId","ignored1","ignored2","currentViewModel","currentLoadingOperationId","disposeAssociatedComponentViewModel","currentViewModelDispose","loadingOperationId","componentViewModel","childBindingContext","ctx","attrHtmlToJavascriptMap","class","for","update","attrName","attrValue","toRemove","removeAttribute","after","updateModel","isChecked","checked","elemValue","useCheckedValue","checkedValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","oldElemValue","updateView","isCheckbox","disabled","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","cancelBubble","stopPropagation","makeTemplateValueAccessor","unwrappedValue","foreach","as","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","handleElementFocusChange","isFocused","ownerDoc","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","captionPlaceholder","selectedOptions","applyToObject","defaultValue","predicateType","optionForArrayItem","arrayEntry","oldOptions","previousSelectedValues","valueAllowUnset","itemUpdate","optionText","setSelectionCallback","newOptions","captionValue","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","arrayToDomNodeChildrenOptions","setDomNodeChildrenFromArrayMapping","abs","valueToWrite","styleName","styleValue","parseVersion","parseFloat","operaVersion","opera","parseInt","safariVersion","firefoxVersion","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","deferUpdateModel","ieUpdateModel","onEvent","preprocess","addBinding","currentIndex","eventsToCatch","requestedEventsToCatch","propertyChangedFired","valueUpdateHandler","autocomplete","updateFromModel","applyValueAction","isCurrentlyVisible","newValueAccessor","templateSource","templateDocument","templateSources","domElement","anonymousTemplate","rewriterCallback","rewritten","templateRewriting","validateDataBindValuesForRewriting","allValidators","validator","possibleErrorMessage","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","applyBindingsToNextSiblingScript","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","getTemplateDomData","templatesDomDataKey","setTemplateDomData","templateType","elemContentsProperty","dataDomDataPrefix","containerData","templateData","textData","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","templateEngineToUse","_templateEngine","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","disposeOldComputedAndStoreNewOne","newComputed","oldComputed","templateComputedDomDataKey","setTemplateEngine","renderTemplate","dataOrBindingContext","firstTargetNode","whenToDispose","activelyDisposeWhenNodeIsRemoved","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","executeTemplateForArrayItem","arrayValue","activateBindingsCallback","addedNodesArray","bindingValue","templateComputed","dataArray","innerBindingContext","parsedBindingValue","left","right","limitFailedCompares","failedCompares","l","r","leftItem","rightItem","oldArray","newArray","dontLimitMoves","compareSmallArrayToBigArray","statusNotInOld","statusNotInNew","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","reverse","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","itemMovedOrRetained","editScriptIndex","oldPosition","mapData","lastMappingResult","newMappingResultIndex","itemsForMoveCallbacks","indexObservable","newMappingResult","itemsToProcess","callCallback","items","editScriptItem","movedIndex","isFirstExecution","lastArray","x","lastMappingResultIndex","nodesToDelete","itemsForBeforeRemoveCallbacks","itemsForAfterAddCallbacks","nextNode","initialized","templateText","jqueryTmplTemplateEngine","ensureHasReferencedJQueryTemplates","jQueryTmplVersion","compiledTemplate","jQueryTemplateOptions","precompiled","resultNodes","koBindingContext","templateMarkup","jqueryTmplTemplateEngineInstance","lat","lng","Object","assign","y","mapTheme"],"mappings":"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"}